/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.cryptography_project;

import java.io.File;
import java.nio.file.Files;
import java.security.MessageDigest;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author joshuatupas
 */
public class FileIntegrityJT extends javax.swing.JFrame {

    private File selectedFile;

    /**
     * Creates new form FileIntegrity
     */
    public FileIntegrityJT() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        fileButton = new javax.swing.JButton();
        fileNameTF = new javax.swing.JLabel();
        hashButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        hashTF = new javax.swing.JTextField();
        verifyButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        hashrecordsTA = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        fileButton.setText("Choose File");
        fileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileButtonActionPerformed(evt);
            }
        });
        jPanel1.add(fileButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 110, -1, -1));

        fileNameTF.setText("No File Chosen");
        jPanel1.add(fileNameTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 120, -1, -1));

        hashButton.setText("Calculate Hash");
        hashButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hashButtonActionPerformed(evt);
            }
        });
        jPanel1.add(hashButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 110, -1, -1));

        jLabel1.setText("Hash Value:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, -1, -1));

        hashTF.setToolTipText("Copy the hash here");
        jPanel1.add(hashTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 220, 540, 40));

        verifyButton.setText("Verify");
        verifyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verifyButtonActionPerformed(evt);
            }
        });
        jPanel1.add(verifyButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 280, -1, -1));

        jTabbedPane1.addTab("Hash", jPanel1);

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        hashrecordsTA.setEditable(false);
        hashrecordsTA.setColumns(20);
        hashrecordsTA.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        hashrecordsTA.setRows(5);
        hashrecordsTA.setText("File:\t\tHash Value:\n\n");
        jScrollPane2.setViewportView(hashrecordsTA);

        jPanel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 630, 180));

        jTabbedPane1.addTab("Hash records", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 390, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //byte to hex converter to get the hashed value
    private static String bytesToHex(byte[] hash) {
        StringBuilder hexString = new StringBuilder(2 * hash.length);
        for (int i = 0; i < hash.length; i++) {
            String hex = Integer.toHexString(0xff & hash[i]);
            if (hex.length() == 1) {
                hexString.append('0');
            }
            hexString.append(hex);
        }
        return hexString.toString();
    }

    //MessageDigest class for SHA-256 hashing
    private byte[] messageDigest() throws Exception {
        MessageDigest digest = MessageDigest.getInstance("SHA-256");
        byte[] fileBytes = Files.readAllBytes(selectedFile.toPath());
        return digest.digest(fileBytes);
    }

    private void verifyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verifyButtonActionPerformed
        try {
            String verifyHash = hashTF.getText();
            //if the input is empty otherwise verify when the file and hash matches
            if (verifyHash.isEmpty()) {
                JOptionPane.showMessageDialog(rootPane, "Please provide a hash first");
            } else {
                if (selectedFile != null && selectedFile.exists()) {
                    byte[] encodedHash = messageDigest();
                    String currentHash = bytesToHex(encodedHash);
                    String existingContent = hashrecordsTA.getText();

                    //to avoid duplicate hash record
                    if (existingContent.contains(selectedFile.getName())) {
                        JOptionPane.showMessageDialog(rootPane, "This file has already been verified!");
                    } else {//add hash record when verification successful
                        if (verifyHash.equals(currentHash)) {
                            hashrecordsTA.append(selectedFile.getName() + "\t" + currentHash + "\n");
                            JOptionPane.showMessageDialog(rootPane, "The File verification successful");
                        } else {
                            JOptionPane.showMessageDialog(rootPane, "The File verification failed");
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Please select a file");
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e);
        }
    }//GEN-LAST:event_verifyButtonActionPerformed

    private void hashButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hashButtonActionPerformed
        try {
            // MessageDigest class for SHA-256
            byte[] encodedHash = messageDigest();
            String hashValue = bytesToHex(encodedHash);
            hashTF.setText(hashValue);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Please select file");
        }
    }//GEN-LAST:event_hashButtonActionPerformed

    private void fileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileButtonActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Select a File");

        int result = fileChooser.showOpenDialog(this);

        if (result == JFileChooser.APPROVE_OPTION) {
            selectedFile = fileChooser.getSelectedFile();
            String fileName = selectedFile.getName();
            fileNameTF.setText(fileName);
        }
    }//GEN-LAST:event_fileButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FileIntegrityJT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FileIntegrityJT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FileIntegrityJT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FileIntegrityJT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FileIntegrityJT().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton fileButton;
    public static javax.swing.JLabel fileNameTF;
    public static javax.swing.JButton hashButton;
    private javax.swing.JTextField hashTF;
    private javax.swing.JTextArea hashrecordsTA;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton verifyButton;
    // End of variables declaration//GEN-END:variables
}
